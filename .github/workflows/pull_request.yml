# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Pull Request

on:
  pull_request:
  workflow_dispatch:

jobs:
  fetch-game-files:
    uses: ./.github/workflows/fetch-game-files.job.yml
  
  build-release:
    name: Build & Test
    needs: fetch-game-files
    runs-on: windows-latest
    concurrency: release

    steps:
      - name: Display build information
        run: |
          echo "Build id: ${{ needs.fetch-game-files.outputs.game_build_id }}"
          echo "Version: ${{ needs.fetch-game-files.outputs.game_version }}"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Interop assemblies
        uses: actions/download-artifact@v4
        with:
          name: interop-assemblies
          path: src/Interop

      - name: Install .NET 8.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: cd src/; dotnet restore

      - name: Build
        env:
          DofusBuildId: ${{ needs.fetch-game-files.outputs.game_build_id }}
          DofusVersion: ${{ needs.fetch-game-files.outputs.game_version }}
        run: cd src; dotnet pack --configuration Release --no-restore --output nuget/ -p:DofusBuildId=${{ needs.fetch-game-files.outputs.game_build_id }} -p:DofusVersion=${{ needs.fetch-game-files.outputs.game_version }}

      - name: Test
        run: cd src; dotnet test --configuration Release --no-restore

      - name: Set status
        uses: octokit/request-action@v2.x
        if: ${{ always() }}
        with:
          route: GET /repos/{repository}/statuses/{sha}
          repository: ${{ github.repository }}
          sha: ${{ github.sha }}
          state: ${{ github.event.workflow_run.conclusion }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  packages: read