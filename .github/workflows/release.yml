# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Release

on:
  release: 
    types: [published]
  workflow_dispatch:

jobs:
  fetch-game-files:
    uses: Dofus-Batteries-Included/actions/.github/workflows/fetch-last-game-files.job.yml@main
  
  build-release:
    name: Build & Release
    needs: fetch-game-files
    runs-on: windows-latest
    concurrency: release

    steps:
      - name: Display build information
        run: |
          echo "Build id: ${{ needs.fetch-game-files.outputs.game_build_id }}"
          echo "Version: ${{ needs.fetch-game-files.outputs.game_version }}"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Interop assemblies
        uses: actions/download-artifact@v4
        with:
          name: interop-assemblies
          path: src/Interop

      - name: Install .NET 8.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Configure Github Nuget repository
        run: dotnet nuget add source --username ismailbennani --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Dofus-Batteries-Included/index.json"

      - name: Restore dependencies
        run: cd src/; dotnet restore

      - name: Build
        env:
          DofusBuildId: ${{ needs.fetch-game-files.outputs.game_build_id }}
          DofusVersion: ${{ needs.fetch-game-files.outputs.game_version }}
        run: cd src; dotnet build --configuration Release --no-restore -p:DofusBuildId=${{ needs.fetch-game-files.outputs.game_build_id }} -p:DofusVersion=${{ needs.fetch-game-files.outputs.game_version }}

      - name: Pack
        run: cd src; dotnet pack --configuration Release --no-build --output nuget/

      - name: Publish nugets
        if: ${{ github.event_name == 'release' }}
        run: |
          foreach($File in (Get-ChildItem "src/nuget/" -Recurse -Include *.nupkg)) {
              dotnet nuget push $File --source github --api-key ${{ secrets.GITHUB_TOKEN }}
          }

      - name: Publish
        run: cd src; dotnet publish --configuration Release --no-build

      - name: Package release
        run: |
          ./pack.ps1 -configuration Release -output dist/DofusBatteriesIncluded

      - name: Create metadata file
        run: |
          $Metadata = @{
            BepInExVersion = "${{ needs.fetch-game-files.outputs.bepiex_version }}" 
            GameBuildId = "${{ needs.fetch-game-files.outputs.game_build_id }}"
            GameVersion = "${{ needs.fetch-game-files.outputs.game_version }}"
          }
          $MetadataJson = $Metadata | ConvertTo-Json
          $null = Write-Host $MetadataJson
          $null = $MetadataJson | Out-File -FilePath "dist/DofusBatteriesIncluded/metadata.json"

      - name: Create release archive
        run: |
          cd dist
          7z a release.zip DofusBatteriesIncluded/

      - name: Upload compiled libraries to release
        if: ${{ github.event_name == 'release' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/release.zip
          asset_name: release.zip
          tag: ${{ github.ref }}

      - name: Upload compiled library to artifacts
        if: ${{ github.event_name != 'release' }}
        uses: actions/upload-artifact@v4
        with:
          name: release.zip
          path: dist/release.zip
          if-no-files-found: 'error'

permissions:
  contents: write
  packages: write